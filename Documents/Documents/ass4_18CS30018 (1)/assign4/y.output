Terminals unused in grammar

    HASH


Grammar

    0 $accept: translation_unit $end

    1 primary_expression: ID
    2                   | constant
    3                   | STR_LITERAL
    4                   | RO_LBRACE expression RO_RBRACE

    5 constant: INT_CONST
    6         | FLOAT_CONST
    7         | CHAR_CONST

    8 argument_expression_list_opt: argument_expression_list
    9                             | %empty

   10 postfix_expression: primary_expression
   11                   | postfix_expression SQ_LBRACE expression SQ_RBRACE
   12                   | postfix_expression RO_LBRACE argument_expression_list_opt RO_RBRACE
   13                   | postfix_expression DOT ID
   14                   | postfix_expression MEM_OP ID
   15                   | postfix_expression INCREMENT_OP
   16                   | postfix_expression DECREMENT_OP
   17                   | RO_LBRACE type_name RO_RBRACE FL_LBRACE initializer_list FL_RBRACE
   18                   | RO_LBRACE type_name RO_RBRACE FL_LBRACE initializer_list COMMA FL_RBRACE

   19 argument_expression_list: assignment_expression
   20                         | argument_expression_list COMMA assignment_expression

   21 unary_expression: postfix_expression
   22                 | INCREMENT_OP unary_expression
   23                 | DECREMENT_OP unary_expression
   24                 | unary_operator cast_expression
   25                 | SIZEOF unary_expression
   26                 | SIZEOF RO_LBRACE type_name RO_RBRACE

   27 unary_operator: BIT_AND
   28               | MULT_OP
   29               | ADD_OP
   30               | MINUS_OP
   31               | BIT_COMPL
   32               | NOT_OP

   33 cast_expression: unary_expression
   34                | RO_LBRACE type_name RO_RBRACE cast_expression

   35 multiplicative_expression: cast_expression
   36                          | multiplicative_expression MULT_OP cast_expression
   37                          | multiplicative_expression DIV_OP cast_expression
   38                          | multiplicative_expression REM cast_expression

   39 additive_expression: multiplicative_expression
   40                    | additive_expression ADD_OP multiplicative_expression
   41                    | additive_expression MINUS_OP multiplicative_expression

   42 shift_expression: additive_expression
   43                 | shift_expression L_SHIFT additive_expression
   44                 | shift_expression R_SHIFT additive_expression

   45 relational_expression: shift_expression
   46                      | relational_expression LT shift_expression
   47                      | relational_expression GT shift_expression
   48                      | relational_expression LT_EQ shift_expression
   49                      | relational_expression GT_EQ shift_expression

   50 equality_expression: relational_expression
   51                    | equality_expression EQ relational_expression
   52                    | equality_expression NEQ relational_expression

   53 AND_expression: equality_expression
   54               | AND_expression BIT_AND equality_expression

   55 exclusive_OR_expression: AND_expression
   56                        | exclusive_OR_expression BIT_XOR AND_expression

   57 inclusive_OR_expression: exclusive_OR_expression
   58                        | inclusive_OR_expression BIT_OR exclusive_OR_expression

   59 logical_AND_expression: inclusive_OR_expression
   60                       | logical_AND_expression LOGIC_AND inclusive_OR_expression

   61 logical_OR_expression: logical_AND_expression
   62                      | logical_OR_expression LOGIC_OR logical_AND_expression

   63 conditional_expression: logical_OR_expression
   64                       | logical_OR_expression QUERY expression COLON conditional_expression

   65 assignment_expression: conditional_expression
   66                      | unary_expression assignment_operator assignment_expression

   67 assignment_operator: ASSIGN
   68                    | MULT_ASGN
   69                    | DIV_ASGN
   70                    | REM_ASGN
   71                    | ADD_ASGN
   72                    | MINUS_ASGN
   73                    | LS_ASGN
   74                    | RS_ASGN
   75                    | BIT_AND_ASGN
   76                    | BIT_XOR_ASGN
   77                    | BIT_OR_ASGN

   78 expression: assignment_expression
   79           | expression COMMA assignment_expression

   80 constant_expression: conditional_expression

   81 declaration: declaration_specifiers init_declarator_list_opt SEMI_COLON

   82 init_declarator_list_opt: %empty
   83                         | init_declarator_list

   84 declaration_specifiers_opt: %empty
   85                           | declaration_specifiers

   86 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   87                       | type_specifier declaration_specifiers_opt
   88                       | type_qualifier declaration_specifiers_opt
   89                       | function_specifier declaration_specifiers_opt

   90 init_declarator_list: init_declarator
   91                     | init_declarator_list COMMA init_declarator

   92 init_declarator: declarator
   93                | declarator ASSIGN initializer

   94 storage_class_specifier: EXTERN
   95                        | STATIC

   96 type_specifier: VOID
   97               | CHAR
   98               | SHORT
   99               | INT
  100               | LONG
  101               | FLOAT
  102               | DOUBLE

  103 specifier_qualifier_list_opt: specifier_qualifier_list
  104                             | %empty

  105 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  106                         | type_qualifier specifier_qualifier_list_opt

  107 type_qualifier: CONST
  108               | RESTRICT
  109               | VOLATILE

  110 function_specifier: INLINE

  111 pointer_opt: pointer
  112            | %empty

  113 declarator: pointer_opt direct_declarator

  114 assignment_expression_opt: assignment_expression
  115                          | %empty

  116 type_qualifier_list_opt: type_qualifier_list
  117                        | %empty

  118 identifier_list_opt: identifier_list
  119                    | %empty

  120 direct_declarator: ID
  121                  | RO_LBRACE declarator RO_RBRACE
  122                  | direct_declarator SQ_LBRACE type_qualifier_list_opt assignment_expression_opt SQ_RBRACE
  123                  | direct_declarator SQ_LBRACE STATIC type_qualifier_list_opt assignment_expression SQ_RBRACE
  124                  | direct_declarator SQ_LBRACE type_qualifier_list STATIC assignment_expression SQ_RBRACE
  125                  | direct_declarator SQ_LBRACE type_qualifier_list_opt MULT_OP SQ_RBRACE
  126                  | direct_declarator RO_LBRACE parameter_type_list RO_RBRACE
  127                  | direct_declarator RO_LBRACE identifier_list_opt RO_RBRACE

  128 pointer: MULT_OP type_qualifier_list_opt
  129        | MULT_OP type_qualifier_list_opt pointer

  130 type_qualifier_list: type_qualifier
  131                    | type_qualifier_list type_qualifier

  132 parameter_type_list: parameter_list
  133                    | parameter_list COMMA VAR_ARG_LIST

  134 parameter_list: parameter_declaration
  135               | parameter_list COMMA parameter_declaration

  136 parameter_declaration: declaration_specifiers declarator
  137                      | declaration_specifiers

  138 identifier_list: ID
  139                | identifier_list COMMA ID

  140 type_name: specifier_qualifier_list

  141 initializer: assignment_expression
  142            | FL_LBRACE initializer_list FL_RBRACE
  143            | FL_LBRACE initializer_list COMMA FL_RBRACE

  144 designation_opt: designation
  145                | %empty

  146 initializer_list: designation_opt initializer
  147                 | initializer_list COMMA designation_opt initializer

  148 designation: designator_list ASSIGN

  149 designator_list: designator
  150                | designator_list designator

  151 designator: SQ_LBRACE constant_expression SQ_RBRACE
  152           | DOT ID

  153 statement: labeled_statement
  154          | compound_statement
  155          | expression_statement
  156          | selection_statement
  157          | iteration_statement
  158          | jump_statement

  159 labeled_statement: ID COLON statement
  160                  | CASE constant_expression COLON statement
  161                  | DEFAULT COLON statement

  162 block_item_list_opt: block_item_list
  163                    | %empty

  164 compound_statement: FL_LBRACE block_item_list_opt FL_RBRACE

  165 block_item_list: block_item
  166                | block_item_list block_item

  167 block_item: declaration
  168           | statement

  169 expression_opt: expression
  170               | %empty

  171 expression_statement: expression_opt SEMI_COLON

  172 selection_statement: IF RO_LBRACE expression RO_RBRACE statement
  173                    | IF RO_LBRACE expression RO_RBRACE statement ELSE statement
  174                    | SWITCH RO_LBRACE expression RO_RBRACE statement

  175 iteration_statement: WHILE RO_LBRACE expression RO_RBRACE statement
  176                    | DO statement WHILE RO_LBRACE expression RO_RBRACE SEMI_COLON
  177                    | FOR RO_LBRACE expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt RO_RBRACE statement
  178                    | FOR RO_LBRACE declaration expression_opt SEMI_COLON expression_opt RO_RBRACE statement

  179 jump_statement: GOTO ID SEMI_COLON
  180               | CONTINUE SEMI_COLON
  181               | BREAK SEMI_COLON
  182               | RETURN expression_opt SEMI_COLON

  183 translation_unit: external_declaration
  184                 | translation_unit external_declaration

  185 external_declaration: function_definition
  186                     | declaration

  187 declaration_list_opt: declaration_list
  188                     | %empty

  189 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement

  190 declaration_list: declaration
  191                 | declaration_list declaration


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    BREAK (258) 181
    CASE (259) 160
    CHAR (260) 97
    CONTINUE (261) 180
    DEFAULT (262) 161
    DO (263) 176
    DOUBLE (264) 102
    ELSE (265) 173
    EXTERN (266) 94
    FLOAT (267) 101
    FOR (268) 177 178
    GOTO (269) 179
    IF (270) 172 173
    INT (271) 99
    LONG (272) 100
    RETURN (273) 182
    SHORT (274) 98
    SIZEOF (275) 25 26
    STATIC (276) 95 123 124
    SWITCH (277) 174
    VOID (278) 96
    WHILE (279) 175 176
    CONST (280) 107
    RESTRICT (281) 108
    VOLATILE (282) 109
    INLINE (283) 110
    INT_CONST <intval> (284) 5
    FLOAT_CONST <floatval> (285) 6
    CHAR_CONST <charval> (286) 7
    STR_LITERAL <charval> (287) 3
    ID (288) 1 13 14 120 138 139 152 159 179
    SQ_LBRACE (289) 11 122 123 124 125 151
    SQ_RBRACE (290) 11 122 123 124 125 151
    RO_LBRACE (291) 4 12 17 18 26 34 121 126 127 172 173 174 175 176 177 178
    RO_RBRACE (292) 4 12 17 18 26 34 121 126 127 172 173 174 175 176 177 178
    FL_LBRACE (293) 17 18 142 143 164
    FL_RBRACE (294) 17 18 142 143 164
    DOT (295) 13 152
    MEM_OP (296) 14
    INCREMENT_OP (297) 15 22
    DECREMENT_OP (298) 16 23
    BIT_AND (299) 27 54
    MULT_OP (300) 28 36 125 128 129
    ADD_OP (301) 29 40
    MINUS_OP (302) 30 41
    BIT_COMPL (303) 31
    NOT_OP (304) 32
    DIV_OP (305) 37
    REM (306) 38
    L_SHIFT (307) 43
    R_SHIFT (308) 44
    LT (309) 46
    GT (310) 47
    LT_EQ (311) 48
    GT_EQ (312) 49
    EQ (313) 51
    NEQ (314) 52
    BIT_XOR (315) 56
    BIT_OR (316) 58
    LOGIC_AND (317) 60
    LOGIC_OR (318) 62
    QUERY (319) 64
    COLON (320) 64 159 160 161
    SEMI_COLON (321) 81 171 176 177 178 179 180 181 182
    VAR_ARG_LIST (322) 133
    ASSIGN (323) 67 93 148
    MULT_ASGN (324) 68
    DIV_ASGN (325) 69
    REM_ASGN (326) 70
    ADD_ASGN (327) 71
    MINUS_ASGN (328) 72
    LS_ASGN (329) 73
    RS_ASGN (330) 74
    BIT_AND_ASGN (331) 75
    BIT_XOR_ASGN (332) 76
    BIT_OR_ASGN (333) 77
    COMMA (334) 18 20 79 91 133 135 139 143 147
    HASH (335)
    THEN (336)


Nonterminals, with rules where they appear

    $accept (82)
        on left: 0
    primary_expression (83)
        on left: 1 2 3 4
        on right: 10
    constant (84)
        on left: 5 6 7
        on right: 2
    argument_expression_list_opt (85)
        on left: 8 9
        on right: 12
    postfix_expression (86)
        on left: 10 11 12 13 14 15 16 17 18
        on right: 11 12 13 14 15 16 21
    argument_expression_list (87)
        on left: 19 20
        on right: 8 20
    unary_expression (88)
        on left: 21 22 23 24 25 26
        on right: 22 23 25 33 66
    unary_operator (89)
        on left: 27 28 29 30 31 32
        on right: 24
    cast_expression (90)
        on left: 33 34
        on right: 24 34 35 36 37 38
    multiplicative_expression (91)
        on left: 35 36 37 38
        on right: 36 37 38 39 40 41
    additive_expression (92)
        on left: 39 40 41
        on right: 40 41 42 43 44
    shift_expression (93)
        on left: 42 43 44
        on right: 43 44 45 46 47 48 49
    relational_expression (94)
        on left: 45 46 47 48 49
        on right: 46 47 48 49 50 51 52
    equality_expression (95)
        on left: 50 51 52
        on right: 51 52 53 54
    AND_expression (96)
        on left: 53 54
        on right: 54 55 56
    exclusive_OR_expression (97)
        on left: 55 56
        on right: 56 57 58
    inclusive_OR_expression (98)
        on left: 57 58
        on right: 58 59 60
    logical_AND_expression (99)
        on left: 59 60
        on right: 60 61 62
    logical_OR_expression (100)
        on left: 61 62
        on right: 62 63 64
    conditional_expression (101)
        on left: 63 64
        on right: 64 65 80
    assignment_expression (102)
        on left: 65 66
        on right: 19 20 66 78 79 114 123 124 141
    assignment_operator (103)
        on left: 67 68 69 70 71 72 73 74 75 76 77
        on right: 66
    expression (104)
        on left: 78 79
        on right: 4 11 64 79 169 172 173 174 175 176
    constant_expression (105)
        on left: 80
        on right: 151 160
    declaration (106)
        on left: 81
        on right: 167 178 186 190 191
    init_declarator_list_opt (107)
        on left: 82 83
        on right: 81
    declaration_specifiers_opt (108)
        on left: 84 85
        on right: 86 87 88 89
    declaration_specifiers (109)
        on left: 86 87 88 89
        on right: 81 85 136 137 189
    init_declarator_list (110)
        on left: 90 91
        on right: 83 91
    init_declarator (111)
        on left: 92 93
        on right: 90 91
    storage_class_specifier (112)
        on left: 94 95
        on right: 86
    type_specifier (113)
        on left: 96 97 98 99 100 101 102
        on right: 87 105
    specifier_qualifier_list_opt (114)
        on left: 103 104
        on right: 105 106
    specifier_qualifier_list (115)
        on left: 105 106
        on right: 103 140
    type_qualifier (116)
        on left: 107 108 109
        on right: 88 106 130 131
    function_specifier (117)
        on left: 110
        on right: 89
    pointer_opt (118)
        on left: 111 112
        on right: 113
    declarator (119)
        on left: 113
        on right: 92 93 121 136 189
    assignment_expression_opt (120)
        on left: 114 115
        on right: 122
    type_qualifier_list_opt (121)
        on left: 116 117
        on right: 122 123 125 128 129
    identifier_list_opt (122)
        on left: 118 119
        on right: 127
    direct_declarator (123)
        on left: 120 121 122 123 124 125 126 127
        on right: 113 122 123 124 125 126 127
    pointer (124)
        on left: 128 129
        on right: 111 129
    type_qualifier_list (125)
        on left: 130 131
        on right: 116 124 131
    parameter_type_list (126)
        on left: 132 133
        on right: 126
    parameter_list (127)
        on left: 134 135
        on right: 132 133 135
    parameter_declaration (128)
        on left: 136 137
        on right: 134 135
    identifier_list (129)
        on left: 138 139
        on right: 118 139
    type_name (130)
        on left: 140
        on right: 17 18 26 34
    initializer (131)
        on left: 141 142 143
        on right: 93 146 147
    designation_opt (132)
        on left: 144 145
        on right: 146 147
    initializer_list (133)
        on left: 146 147
        on right: 17 18 142 143 147
    designation (134)
        on left: 148
        on right: 144
    designator_list (135)
        on left: 149 150
        on right: 148 150
    designator (136)
        on left: 151 152
        on right: 149 150
    statement (137)
        on left: 153 154 155 156 157 158
        on right: 159 160 161 168 172 173 174 175 176 177 178
    labeled_statement (138)
        on left: 159 160 161
        on right: 153
    block_item_list_opt (139)
        on left: 162 163
        on right: 164
    compound_statement (140)
        on left: 164
        on right: 154 189
    block_item_list (141)
        on left: 165 166
        on right: 162 166
    block_item (142)
        on left: 167 168
        on right: 165 166
    expression_opt (143)
        on left: 169 170
        on right: 171 177 178 182
    expression_statement (144)
        on left: 171
        on right: 155
    selection_statement (145)
        on left: 172 173 174
        on right: 156
    iteration_statement (146)
        on left: 175 176 177 178
        on right: 157
    jump_statement (147)
        on left: 179 180 181 182
        on right: 158
    translation_unit (148)
        on left: 183 184
        on right: 0 184
    external_declaration (149)
        on left: 185 186
        on right: 183 184
    declaration_list_opt (150)
        on left: 187 188
        on right: 189
    function_definition (151)
        on left: 189
        on right: 185
    declaration_list (152)
        on left: 190 191
        on right: 187 191


State 0

    0 $accept: . translation_unit $end

    CHAR      shift, and go to state 1
    DOUBLE    shift, and go to state 2
    EXTERN    shift, and go to state 3
    FLOAT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    VOID      shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    declaration              go to state 14
    declaration_specifiers   go to state 15
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    translation_unit         go to state 20
    external_declaration     go to state 21
    function_definition      go to state 22


State 1

   97 type_specifier: CHAR .

    $default  reduce using rule 97 (type_specifier)


State 2

  102 type_specifier: DOUBLE .

    $default  reduce using rule 102 (type_specifier)


State 3

   94 storage_class_specifier: EXTERN .

    $default  reduce using rule 94 (storage_class_specifier)


State 4

  101 type_specifier: FLOAT .

    $default  reduce using rule 101 (type_specifier)


State 5

   99 type_specifier: INT .

    $default  reduce using rule 99 (type_specifier)


State 6

  100 type_specifier: LONG .

    $default  reduce using rule 100 (type_specifier)


State 7

   98 type_specifier: SHORT .

    $default  reduce using rule 98 (type_specifier)


State 8

   95 storage_class_specifier: STATIC .

    $default  reduce using rule 95 (storage_class_specifier)


State 9

   96 type_specifier: VOID .

    $default  reduce using rule 96 (type_specifier)


State 10

  107 type_qualifier: CONST .

    $default  reduce using rule 107 (type_qualifier)


State 11

  108 type_qualifier: RESTRICT .

    $default  reduce using rule 108 (type_qualifier)


State 12

  109 type_qualifier: VOLATILE .

    $default  reduce using rule 109 (type_qualifier)


State 13

  110 function_specifier: INLINE .

    $default  reduce using rule 110 (function_specifier)


State 14

  186 external_declaration: declaration .

    $default  reduce using rule 186 (external_declaration)


State 15

   81 declaration: declaration_specifiers . init_declarator_list_opt SEMI_COLON
  189 function_definition: declaration_specifiers . declarator declaration_list_opt compound_statement

    MULT_OP  shift, and go to state 23

    SEMI_COLON  reduce using rule 82 (init_declarator_list_opt)
    $default    reduce using rule 112 (pointer_opt)

    init_declarator_list_opt  go to state 24
    init_declarator_list      go to state 25
    init_declarator           go to state 26
    pointer_opt               go to state 27
    declarator                go to state 28
    pointer                   go to state 29


State 16

   86 declaration_specifiers: storage_class_specifier . declaration_specifiers_opt

    CHAR      shift, and go to state 1
    DOUBLE    shift, and go to state 2
    EXTERN    shift, and go to state 3
    FLOAT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    VOID      shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    $default  reduce using rule 84 (declaration_specifiers_opt)

    declaration_specifiers_opt  go to state 30
    declaration_specifiers      go to state 31
    storage_class_specifier     go to state 16
    type_specifier              go to state 17
    type_qualifier              go to state 18
    function_specifier          go to state 19


State 17

   87 declaration_specifiers: type_specifier . declaration_specifiers_opt

    CHAR      shift, and go to state 1
    DOUBLE    shift, and go to state 2
    EXTERN    shift, and go to state 3
    FLOAT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    VOID      shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    $default  reduce using rule 84 (declaration_specifiers_opt)

    declaration_specifiers_opt  go to state 32
    declaration_specifiers      go to state 31
    storage_class_specifier     go to state 16
    type_specifier              go to state 17
    type_qualifier              go to state 18
    function_specifier          go to state 19


State 18

   88 declaration_specifiers: type_qualifier . declaration_specifiers_opt

    CHAR      shift, and go to state 1
    DOUBLE    shift, and go to state 2
    EXTERN    shift, and go to state 3
    FLOAT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    VOID      shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    $default  reduce using rule 84 (declaration_specifiers_opt)

    declaration_specifiers_opt  go to state 33
    declaration_specifiers      go to state 31
    storage_class_specifier     go to state 16
    type_specifier              go to state 17
    type_qualifier              go to state 18
    function_specifier          go to state 19


State 19

   89 declaration_specifiers: function_specifier . declaration_specifiers_opt

    CHAR      shift, and go to state 1
    DOUBLE    shift, and go to state 2
    EXTERN    shift, and go to state 3
    FLOAT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    VOID      shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    $default  reduce using rule 84 (declaration_specifiers_opt)

    declaration_specifiers_opt  go to state 34
    declaration_specifiers      go to state 31
    storage_class_specifier     go to state 16
    type_specifier              go to state 17
    type_qualifier              go to state 18
    function_specifier          go to state 19


State 20

    0 $accept: translation_unit . $end
  184 translation_unit: translation_unit . external_declaration

    $end      shift, and go to state 35
    CHAR      shift, and go to state 1
    DOUBLE    shift, and go to state 2
    EXTERN    shift, and go to state 3
    FLOAT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    VOID      shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    declaration              go to state 14
    declaration_specifiers   go to state 15
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    external_declaration     go to state 36
    function_definition      go to state 22


State 21

  183 translation_unit: external_declaration .

    $default  reduce using rule 183 (translation_unit)


State 22

  185 external_declaration: function_definition .

    $default  reduce using rule 185 (external_declaration)


State 23

  128 pointer: MULT_OP . type_qualifier_list_opt
  129        | MULT_OP . type_qualifier_list_opt pointer

    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12

    $default  reduce using rule 117 (type_qualifier_list_opt)

    type_qualifier           go to state 37
    type_qualifier_list_opt  go to state 38
    type_qualifier_list      go to state 39


State 24

   81 declaration: declaration_specifiers init_declarator_list_opt . SEMI_COLON

    SEMI_COLON  shift, and go to state 40


State 25

   83 init_declarator_list_opt: init_declarator_list .
   91 init_declarator_list: init_declarator_list . COMMA init_declarator

    COMMA  shift, and go to state 41

    $default  reduce using rule 83 (init_declarator_list_opt)


State 26

   90 init_declarator_list: init_declarator .

    $default  reduce using rule 90 (init_declarator_list)


State 27

  113 declarator: pointer_opt . direct_declarator

    ID         shift, and go to state 42
    RO_LBRACE  shift, and go to state 43

    direct_declarator  go to state 44


State 28

   92 init_declarator: declarator .
   93                | declarator . ASSIGN initializer
  189 function_definition: declaration_specifiers declarator . declaration_list_opt compound_statement

    CHAR      shift, and go to state 1
    DOUBLE    shift, and go to state 2
    EXTERN    shift, and go to state 3
    FLOAT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    VOID      shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13
    ASSIGN    shift, and go to state 45

    FL_LBRACE  reduce using rule 188 (declaration_list_opt)
    $default   reduce using rule 92 (init_declarator)

    declaration              go to state 46
    declaration_specifiers   go to state 47
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    declaration_list_opt     go to state 48
    declaration_list         go to state 49


State 29

  111 pointer_opt: pointer .

    $default  reduce using rule 111 (pointer_opt)


State 30

   86 declaration_specifiers: storage_class_specifier declaration_specifiers_opt .

    $default  reduce using rule 86 (declaration_specifiers)


State 31

   85 declaration_specifiers_opt: declaration_specifiers .

    $default  reduce using rule 85 (declaration_specifiers_opt)


State 32

   87 declaration_specifiers: type_specifier declaration_specifiers_opt .

    $default  reduce using rule 87 (declaration_specifiers)


State 33

   88 declaration_specifiers: type_qualifier declaration_specifiers_opt .

    $default  reduce using rule 88 (declaration_specifiers)


State 34

   89 declaration_specifiers: function_specifier declaration_specifiers_opt .

    $default  reduce using rule 89 (declaration_specifiers)


State 35

    0 $accept: translation_unit $end .

    $default  accept


State 36

  184 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 184 (translation_unit)


State 37

  130 type_qualifier_list: type_qualifier .

    $default  reduce using rule 130 (type_qualifier_list)


State 38

  128 pointer: MULT_OP type_qualifier_list_opt .
  129        | MULT_OP type_qualifier_list_opt . pointer

    MULT_OP  shift, and go to state 23

    $default  reduce using rule 128 (pointer)

    pointer  go to state 50


State 39

  116 type_qualifier_list_opt: type_qualifier_list .
  131 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12

    $default  reduce using rule 116 (type_qualifier_list_opt)

    type_qualifier  go to state 51


State 40

   81 declaration: declaration_specifiers init_declarator_list_opt SEMI_COLON .

    $default  reduce using rule 81 (declaration)


State 41

   91 init_declarator_list: init_declarator_list COMMA . init_declarator

    MULT_OP  shift, and go to state 23

    $default  reduce using rule 112 (pointer_opt)

    init_declarator  go to state 52
    pointer_opt      go to state 27
    declarator       go to state 53
    pointer          go to state 29


State 42

  120 direct_declarator: ID .

    $default  reduce using rule 120 (direct_declarator)


State 43

  121 direct_declarator: RO_LBRACE . declarator RO_RBRACE

    MULT_OP  shift, and go to state 23

    $default  reduce using rule 112 (pointer_opt)

    pointer_opt  go to state 27
    declarator   go to state 54
    pointer      go to state 29


State 44

  113 declarator: pointer_opt direct_declarator .
  122 direct_declarator: direct_declarator . SQ_LBRACE type_qualifier_list_opt assignment_expression_opt SQ_RBRACE
  123                  | direct_declarator . SQ_LBRACE STATIC type_qualifier_list_opt assignment_expression SQ_RBRACE
  124                  | direct_declarator . SQ_LBRACE type_qualifier_list STATIC assignment_expression SQ_RBRACE
  125                  | direct_declarator . SQ_LBRACE type_qualifier_list_opt MULT_OP SQ_RBRACE
  126                  | direct_declarator . RO_LBRACE parameter_type_list RO_RBRACE
  127                  | direct_declarator . RO_LBRACE identifier_list_opt RO_RBRACE

    SQ_LBRACE  shift, and go to state 55
    RO_LBRACE  shift, and go to state 56

    $default  reduce using rule 113 (declarator)


State 45

   93 init_declarator: declarator ASSIGN . initializer

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    FL_LBRACE     shift, and go to state 64
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 90
    initializer                go to state 91


State 46

  190 declaration_list: declaration .

    $default  reduce using rule 190 (declaration_list)


State 47

   81 declaration: declaration_specifiers . init_declarator_list_opt SEMI_COLON

    MULT_OP  shift, and go to state 23

    SEMI_COLON  reduce using rule 82 (init_declarator_list_opt)
    $default    reduce using rule 112 (pointer_opt)

    init_declarator_list_opt  go to state 24
    init_declarator_list      go to state 25
    init_declarator           go to state 26
    pointer_opt               go to state 27
    declarator                go to state 53
    pointer                   go to state 29


State 48

  189 function_definition: declaration_specifiers declarator declaration_list_opt . compound_statement

    FL_LBRACE  shift, and go to state 92

    compound_statement  go to state 93


State 49

  187 declaration_list_opt: declaration_list .
  191 declaration_list: declaration_list . declaration

    CHAR      shift, and go to state 1
    DOUBLE    shift, and go to state 2
    EXTERN    shift, and go to state 3
    FLOAT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    VOID      shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13

    $default  reduce using rule 187 (declaration_list_opt)

    declaration              go to state 94
    declaration_specifiers   go to state 47
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19


State 50

  129 pointer: MULT_OP type_qualifier_list_opt pointer .

    $default  reduce using rule 129 (pointer)


State 51

  131 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 131 (type_qualifier_list)


State 52

   91 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 91 (init_declarator_list)


State 53

   92 init_declarator: declarator .
   93                | declarator . ASSIGN initializer

    ASSIGN  shift, and go to state 45

    $default  reduce using rule 92 (init_declarator)


State 54

  121 direct_declarator: RO_LBRACE declarator . RO_RBRACE

    RO_RBRACE  shift, and go to state 95


State 55

  122 direct_declarator: direct_declarator SQ_LBRACE . type_qualifier_list_opt assignment_expression_opt SQ_RBRACE
  123                  | direct_declarator SQ_LBRACE . STATIC type_qualifier_list_opt assignment_expression SQ_RBRACE
  124                  | direct_declarator SQ_LBRACE . type_qualifier_list STATIC assignment_expression SQ_RBRACE
  125                  | direct_declarator SQ_LBRACE . type_qualifier_list_opt MULT_OP SQ_RBRACE

    STATIC    shift, and go to state 96
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12

    $default  reduce using rule 117 (type_qualifier_list_opt)

    type_qualifier           go to state 37
    type_qualifier_list_opt  go to state 97
    type_qualifier_list      go to state 98


State 56

  126 direct_declarator: direct_declarator RO_LBRACE . parameter_type_list RO_RBRACE
  127                  | direct_declarator RO_LBRACE . identifier_list_opt RO_RBRACE

    CHAR      shift, and go to state 1
    DOUBLE    shift, and go to state 2
    EXTERN    shift, and go to state 3
    FLOAT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    VOID      shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    INLINE    shift, and go to state 13
    ID        shift, and go to state 99

    $default  reduce using rule 119 (identifier_list_opt)

    declaration_specifiers   go to state 100
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    identifier_list_opt      go to state 101
    parameter_type_list      go to state 102
    parameter_list           go to state 103
    parameter_declaration    go to state 104
    identifier_list          go to state 105


State 57

   25 unary_expression: SIZEOF . unary_expression
   26                 | SIZEOF . RO_LBRACE type_name RO_RBRACE

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 106
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression  go to state 73
    constant            go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 107
    unary_operator      go to state 77


State 58

    5 constant: INT_CONST .

    $default  reduce using rule 5 (constant)


State 59

    6 constant: FLOAT_CONST .

    $default  reduce using rule 6 (constant)


State 60

    7 constant: CHAR_CONST .

    $default  reduce using rule 7 (constant)


State 61

    3 primary_expression: STR_LITERAL .

    $default  reduce using rule 3 (primary_expression)


State 62

    1 primary_expression: ID .

    $default  reduce using rule 1 (primary_expression)


State 63

    4 primary_expression: RO_LBRACE . expression RO_RBRACE
   17 postfix_expression: RO_LBRACE . type_name RO_RBRACE FL_LBRACE initializer_list FL_RBRACE
   18                   | RO_LBRACE . type_name RO_RBRACE FL_LBRACE initializer_list COMMA FL_RBRACE
   34 cast_expression: RO_LBRACE . type_name RO_RBRACE cast_expression

    CHAR          shift, and go to state 1
    DOUBLE        shift, and go to state 2
    FLOAT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SHORT         shift, and go to state 7
    SIZEOF        shift, and go to state 57
    VOID          shift, and go to state 9
    CONST         shift, and go to state 10
    RESTRICT      shift, and go to state 11
    VOLATILE      shift, and go to state 12
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 109
    type_specifier             go to state 110
    specifier_qualifier_list   go to state 111
    type_qualifier             go to state 112
    type_name                  go to state 113


State 64

  142 initializer: FL_LBRACE . initializer_list FL_RBRACE
  143            | FL_LBRACE . initializer_list COMMA FL_RBRACE

    SQ_LBRACE  shift, and go to state 114
    DOT        shift, and go to state 115

    $default  reduce using rule 145 (designation_opt)

    designation_opt   go to state 116
    initializer_list  go to state 117
    designation       go to state 118
    designator_list   go to state 119
    designator        go to state 120


State 65

   22 unary_expression: INCREMENT_OP . unary_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 121
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression  go to state 73
    constant            go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 122
    unary_operator      go to state 77


State 66

   23 unary_expression: DECREMENT_OP . unary_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 121
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression  go to state 73
    constant            go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 123
    unary_operator      go to state 77


State 67

   27 unary_operator: BIT_AND .

    $default  reduce using rule 27 (unary_operator)


State 68

   28 unary_operator: MULT_OP .

    $default  reduce using rule 28 (unary_operator)


State 69

   29 unary_operator: ADD_OP .

    $default  reduce using rule 29 (unary_operator)


State 70

   30 unary_operator: MINUS_OP .

    $default  reduce using rule 30 (unary_operator)


State 71

   31 unary_operator: BIT_COMPL .

    $default  reduce using rule 31 (unary_operator)


State 72

   32 unary_operator: NOT_OP .

    $default  reduce using rule 32 (unary_operator)


State 73

   10 postfix_expression: primary_expression .

    $default  reduce using rule 10 (postfix_expression)


State 74

    2 primary_expression: constant .

    $default  reduce using rule 2 (primary_expression)


State 75

   11 postfix_expression: postfix_expression . SQ_LBRACE expression SQ_RBRACE
   12                   | postfix_expression . RO_LBRACE argument_expression_list_opt RO_RBRACE
   13                   | postfix_expression . DOT ID
   14                   | postfix_expression . MEM_OP ID
   15                   | postfix_expression . INCREMENT_OP
   16                   | postfix_expression . DECREMENT_OP
   21 unary_expression: postfix_expression .

    SQ_LBRACE     shift, and go to state 124
    RO_LBRACE     shift, and go to state 125
    DOT           shift, and go to state 126
    MEM_OP        shift, and go to state 127
    INCREMENT_OP  shift, and go to state 128
    DECREMENT_OP  shift, and go to state 129

    $default  reduce using rule 21 (unary_expression)


State 76

   33 cast_expression: unary_expression .
   66 assignment_expression: unary_expression . assignment_operator assignment_expression

    ASSIGN        shift, and go to state 130
    MULT_ASGN     shift, and go to state 131
    DIV_ASGN      shift, and go to state 132
    REM_ASGN      shift, and go to state 133
    ADD_ASGN      shift, and go to state 134
    MINUS_ASGN    shift, and go to state 135
    LS_ASGN       shift, and go to state 136
    RS_ASGN       shift, and go to state 137
    BIT_AND_ASGN  shift, and go to state 138
    BIT_XOR_ASGN  shift, and go to state 139
    BIT_OR_ASGN   shift, and go to state 140

    $default  reduce using rule 33 (cast_expression)

    assignment_operator  go to state 141


State 77

   24 unary_expression: unary_operator . cast_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression  go to state 73
    constant            go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 142
    unary_operator      go to state 77
    cast_expression     go to state 143


State 78

   35 multiplicative_expression: cast_expression .

    $default  reduce using rule 35 (multiplicative_expression)


State 79

   36 multiplicative_expression: multiplicative_expression . MULT_OP cast_expression
   37                          | multiplicative_expression . DIV_OP cast_expression
   38                          | multiplicative_expression . REM cast_expression
   39 additive_expression: multiplicative_expression .

    MULT_OP  shift, and go to state 144
    DIV_OP   shift, and go to state 145
    REM      shift, and go to state 146

    $default  reduce using rule 39 (additive_expression)


State 80

   40 additive_expression: additive_expression . ADD_OP multiplicative_expression
   41                    | additive_expression . MINUS_OP multiplicative_expression
   42 shift_expression: additive_expression .

    ADD_OP    shift, and go to state 147
    MINUS_OP  shift, and go to state 148

    $default  reduce using rule 42 (shift_expression)


State 81

   43 shift_expression: shift_expression . L_SHIFT additive_expression
   44                 | shift_expression . R_SHIFT additive_expression
   45 relational_expression: shift_expression .

    L_SHIFT  shift, and go to state 149
    R_SHIFT  shift, and go to state 150

    $default  reduce using rule 45 (relational_expression)


State 82

   46 relational_expression: relational_expression . LT shift_expression
   47                      | relational_expression . GT shift_expression
   48                      | relational_expression . LT_EQ shift_expression
   49                      | relational_expression . GT_EQ shift_expression
   50 equality_expression: relational_expression .

    LT     shift, and go to state 151
    GT     shift, and go to state 152
    LT_EQ  shift, and go to state 153
    GT_EQ  shift, and go to state 154

    $default  reduce using rule 50 (equality_expression)


State 83

   51 equality_expression: equality_expression . EQ relational_expression
   52                    | equality_expression . NEQ relational_expression
   53 AND_expression: equality_expression .

    EQ   shift, and go to state 155
    NEQ  shift, and go to state 156

    $default  reduce using rule 53 (AND_expression)


State 84

   54 AND_expression: AND_expression . BIT_AND equality_expression
   55 exclusive_OR_expression: AND_expression .

    BIT_AND  shift, and go to state 157

    $default  reduce using rule 55 (exclusive_OR_expression)


State 85

   56 exclusive_OR_expression: exclusive_OR_expression . BIT_XOR AND_expression
   57 inclusive_OR_expression: exclusive_OR_expression .

    BIT_XOR  shift, and go to state 158

    $default  reduce using rule 57 (inclusive_OR_expression)


State 86

   58 inclusive_OR_expression: inclusive_OR_expression . BIT_OR exclusive_OR_expression
   59 logical_AND_expression: inclusive_OR_expression .

    BIT_OR  shift, and go to state 159

    $default  reduce using rule 59 (logical_AND_expression)


State 87

   60 logical_AND_expression: logical_AND_expression . LOGIC_AND inclusive_OR_expression
   61 logical_OR_expression: logical_AND_expression .

    LOGIC_AND  shift, and go to state 160

    $default  reduce using rule 61 (logical_OR_expression)


State 88

   62 logical_OR_expression: logical_OR_expression . LOGIC_OR logical_AND_expression
   63 conditional_expression: logical_OR_expression .
   64                       | logical_OR_expression . QUERY expression COLON conditional_expression

    LOGIC_OR  shift, and go to state 161
    QUERY     shift, and go to state 162

    $default  reduce using rule 63 (conditional_expression)


State 89

   65 assignment_expression: conditional_expression .

    $default  reduce using rule 65 (assignment_expression)


State 90

  141 initializer: assignment_expression .

    $default  reduce using rule 141 (initializer)


State 91

   93 init_declarator: declarator ASSIGN initializer .

    $default  reduce using rule 93 (init_declarator)


State 92

  164 compound_statement: FL_LBRACE . block_item_list_opt FL_RBRACE

    BREAK         shift, and go to state 163
    CASE          shift, and go to state 164
    CHAR          shift, and go to state 1
    CONTINUE      shift, and go to state 165
    DEFAULT       shift, and go to state 166
    DO            shift, and go to state 167
    DOUBLE        shift, and go to state 2
    EXTERN        shift, and go to state 3
    FLOAT         shift, and go to state 4
    FOR           shift, and go to state 168
    GOTO          shift, and go to state 169
    IF            shift, and go to state 170
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    RETURN        shift, and go to state 171
    SHORT         shift, and go to state 7
    SIZEOF        shift, and go to state 57
    STATIC        shift, and go to state 8
    SWITCH        shift, and go to state 172
    VOID          shift, and go to state 9
    WHILE         shift, and go to state 173
    CONST         shift, and go to state 10
    RESTRICT      shift, and go to state 11
    VOLATILE      shift, and go to state 12
    INLINE        shift, and go to state 13
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 174
    RO_LBRACE     shift, and go to state 63
    FL_LBRACE     shift, and go to state 92
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    SEMI_COLON  reduce using rule 170 (expression_opt)
    $default    reduce using rule 163 (block_item_list_opt)

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 175
    declaration                go to state 176
    declaration_specifiers     go to state 47
    storage_class_specifier    go to state 16
    type_specifier             go to state 17
    type_qualifier             go to state 18
    function_specifier         go to state 19
    statement                  go to state 177
    labeled_statement          go to state 178
    block_item_list_opt        go to state 179
    compound_statement         go to state 180
    block_item_list            go to state 181
    block_item                 go to state 182
    expression_opt             go to state 183
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187


State 93

  189 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement .

    $default  reduce using rule 189 (function_definition)


State 94

  191 declaration_list: declaration_list declaration .

    $default  reduce using rule 191 (declaration_list)


State 95

  121 direct_declarator: RO_LBRACE declarator RO_RBRACE .

    $default  reduce using rule 121 (direct_declarator)


State 96

  123 direct_declarator: direct_declarator SQ_LBRACE STATIC . type_qualifier_list_opt assignment_expression SQ_RBRACE

    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12

    $default  reduce using rule 117 (type_qualifier_list_opt)

    type_qualifier           go to state 37
    type_qualifier_list_opt  go to state 188
    type_qualifier_list      go to state 39


State 97

  122 direct_declarator: direct_declarator SQ_LBRACE type_qualifier_list_opt . assignment_expression_opt SQ_RBRACE
  125                  | direct_declarator SQ_LBRACE type_qualifier_list_opt . MULT_OP SQ_RBRACE

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 189
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    $default  reduce using rule 115 (assignment_expression_opt)

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 190
    assignment_expression_opt  go to state 191


State 98

  116 type_qualifier_list_opt: type_qualifier_list .
  124 direct_declarator: direct_declarator SQ_LBRACE type_qualifier_list . STATIC assignment_expression SQ_RBRACE
  131 type_qualifier_list: type_qualifier_list . type_qualifier

    STATIC    shift, and go to state 192
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12

    $default  reduce using rule 116 (type_qualifier_list_opt)

    type_qualifier  go to state 51


State 99

  138 identifier_list: ID .

    $default  reduce using rule 138 (identifier_list)


State 100

  136 parameter_declaration: declaration_specifiers . declarator
  137                      | declaration_specifiers .

    MULT_OP  shift, and go to state 23

    RO_RBRACE  reduce using rule 137 (parameter_declaration)
    COMMA      reduce using rule 137 (parameter_declaration)
    $default   reduce using rule 112 (pointer_opt)

    pointer_opt  go to state 27
    declarator   go to state 193
    pointer      go to state 29


State 101

  127 direct_declarator: direct_declarator RO_LBRACE identifier_list_opt . RO_RBRACE

    RO_RBRACE  shift, and go to state 194


State 102

  126 direct_declarator: direct_declarator RO_LBRACE parameter_type_list . RO_RBRACE

    RO_RBRACE  shift, and go to state 195


State 103

  132 parameter_type_list: parameter_list .
  133                    | parameter_list . COMMA VAR_ARG_LIST
  135 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 196

    $default  reduce using rule 132 (parameter_type_list)


State 104

  134 parameter_list: parameter_declaration .

    $default  reduce using rule 134 (parameter_list)


State 105

  118 identifier_list_opt: identifier_list .
  139 identifier_list: identifier_list . COMMA ID

    COMMA  shift, and go to state 197

    $default  reduce using rule 118 (identifier_list_opt)


State 106

    4 primary_expression: RO_LBRACE . expression RO_RBRACE
   17 postfix_expression: RO_LBRACE . type_name RO_RBRACE FL_LBRACE initializer_list FL_RBRACE
   18                   | RO_LBRACE . type_name RO_RBRACE FL_LBRACE initializer_list COMMA FL_RBRACE
   26 unary_expression: SIZEOF RO_LBRACE . type_name RO_RBRACE

    CHAR          shift, and go to state 1
    DOUBLE        shift, and go to state 2
    FLOAT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SHORT         shift, and go to state 7
    SIZEOF        shift, and go to state 57
    VOID          shift, and go to state 9
    CONST         shift, and go to state 10
    RESTRICT      shift, and go to state 11
    VOLATILE      shift, and go to state 12
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 109
    type_specifier             go to state 110
    specifier_qualifier_list   go to state 111
    type_qualifier             go to state 112
    type_name                  go to state 198


State 107

   25 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 25 (unary_expression)


State 108

   78 expression: assignment_expression .

    $default  reduce using rule 78 (expression)


State 109

    4 primary_expression: RO_LBRACE expression . RO_RBRACE
   79 expression: expression . COMMA assignment_expression

    RO_RBRACE  shift, and go to state 199
    COMMA      shift, and go to state 200


State 110

  105 specifier_qualifier_list: type_specifier . specifier_qualifier_list_opt

    CHAR      shift, and go to state 1
    DOUBLE    shift, and go to state 2
    FLOAT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SHORT     shift, and go to state 7
    VOID      shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12

    $default  reduce using rule 104 (specifier_qualifier_list_opt)

    type_specifier                go to state 110
    specifier_qualifier_list_opt  go to state 201
    specifier_qualifier_list      go to state 202
    type_qualifier                go to state 112


State 111

  140 type_name: specifier_qualifier_list .

    $default  reduce using rule 140 (type_name)


State 112

  106 specifier_qualifier_list: type_qualifier . specifier_qualifier_list_opt

    CHAR      shift, and go to state 1
    DOUBLE    shift, and go to state 2
    FLOAT     shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SHORT     shift, and go to state 7
    VOID      shift, and go to state 9
    CONST     shift, and go to state 10
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 12

    $default  reduce using rule 104 (specifier_qualifier_list_opt)

    type_specifier                go to state 110
    specifier_qualifier_list_opt  go to state 203
    specifier_qualifier_list      go to state 202
    type_qualifier                go to state 112


State 113

   17 postfix_expression: RO_LBRACE type_name . RO_RBRACE FL_LBRACE initializer_list FL_RBRACE
   18                   | RO_LBRACE type_name . RO_RBRACE FL_LBRACE initializer_list COMMA FL_RBRACE
   34 cast_expression: RO_LBRACE type_name . RO_RBRACE cast_expression

    RO_RBRACE  shift, and go to state 204


State 114

  151 designator: SQ_LBRACE . constant_expression SQ_RBRACE

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 142
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 205
    constant_expression        go to state 206


State 115

  152 designator: DOT . ID

    ID  shift, and go to state 207


State 116

  146 initializer_list: designation_opt . initializer

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    FL_LBRACE     shift, and go to state 64
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 90
    initializer                go to state 208


State 117

  142 initializer: FL_LBRACE initializer_list . FL_RBRACE
  143            | FL_LBRACE initializer_list . COMMA FL_RBRACE
  147 initializer_list: initializer_list . COMMA designation_opt initializer

    FL_RBRACE  shift, and go to state 209
    COMMA      shift, and go to state 210


State 118

  144 designation_opt: designation .

    $default  reduce using rule 144 (designation_opt)


State 119

  148 designation: designator_list . ASSIGN
  150 designator_list: designator_list . designator

    SQ_LBRACE  shift, and go to state 114
    DOT        shift, and go to state 115
    ASSIGN     shift, and go to state 211

    designator  go to state 212


State 120

  149 designator_list: designator .

    $default  reduce using rule 149 (designator_list)


State 121

    4 primary_expression: RO_LBRACE . expression RO_RBRACE
   17 postfix_expression: RO_LBRACE . type_name RO_RBRACE FL_LBRACE initializer_list FL_RBRACE
   18                   | RO_LBRACE . type_name RO_RBRACE FL_LBRACE initializer_list COMMA FL_RBRACE

    CHAR          shift, and go to state 1
    DOUBLE        shift, and go to state 2
    FLOAT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SHORT         shift, and go to state 7
    SIZEOF        shift, and go to state 57
    VOID          shift, and go to state 9
    CONST         shift, and go to state 10
    RESTRICT      shift, and go to state 11
    VOLATILE      shift, and go to state 12
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 109
    type_specifier             go to state 110
    specifier_qualifier_list   go to state 111
    type_qualifier             go to state 112
    type_name                  go to state 213


State 122

   22 unary_expression: INCREMENT_OP unary_expression .

    $default  reduce using rule 22 (unary_expression)


State 123

   23 unary_expression: DECREMENT_OP unary_expression .

    $default  reduce using rule 23 (unary_expression)


State 124

   11 postfix_expression: postfix_expression SQ_LBRACE . expression SQ_RBRACE

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 214


State 125

   12 postfix_expression: postfix_expression RO_LBRACE . argument_expression_list_opt RO_RBRACE

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    $default  reduce using rule 9 (argument_expression_list_opt)

    primary_expression            go to state 73
    constant                      go to state 74
    argument_expression_list_opt  go to state 215
    postfix_expression            go to state 75
    argument_expression_list      go to state 216
    unary_expression              go to state 76
    unary_operator                go to state 77
    cast_expression               go to state 78
    multiplicative_expression     go to state 79
    additive_expression           go to state 80
    shift_expression              go to state 81
    relational_expression         go to state 82
    equality_expression           go to state 83
    AND_expression                go to state 84
    exclusive_OR_expression       go to state 85
    inclusive_OR_expression       go to state 86
    logical_AND_expression        go to state 87
    logical_OR_expression         go to state 88
    conditional_expression        go to state 89
    assignment_expression         go to state 217


State 126

   13 postfix_expression: postfix_expression DOT . ID

    ID  shift, and go to state 218


State 127

   14 postfix_expression: postfix_expression MEM_OP . ID

    ID  shift, and go to state 219


State 128

   15 postfix_expression: postfix_expression INCREMENT_OP .

    $default  reduce using rule 15 (postfix_expression)


State 129

   16 postfix_expression: postfix_expression DECREMENT_OP .

    $default  reduce using rule 16 (postfix_expression)


State 130

   67 assignment_operator: ASSIGN .

    $default  reduce using rule 67 (assignment_operator)


State 131

   68 assignment_operator: MULT_ASGN .

    $default  reduce using rule 68 (assignment_operator)


State 132

   69 assignment_operator: DIV_ASGN .

    $default  reduce using rule 69 (assignment_operator)


State 133

   70 assignment_operator: REM_ASGN .

    $default  reduce using rule 70 (assignment_operator)


State 134

   71 assignment_operator: ADD_ASGN .

    $default  reduce using rule 71 (assignment_operator)


State 135

   72 assignment_operator: MINUS_ASGN .

    $default  reduce using rule 72 (assignment_operator)


State 136

   73 assignment_operator: LS_ASGN .

    $default  reduce using rule 73 (assignment_operator)


State 137

   74 assignment_operator: RS_ASGN .

    $default  reduce using rule 74 (assignment_operator)


State 138

   75 assignment_operator: BIT_AND_ASGN .

    $default  reduce using rule 75 (assignment_operator)


State 139

   76 assignment_operator: BIT_XOR_ASGN .

    $default  reduce using rule 76 (assignment_operator)


State 140

   77 assignment_operator: BIT_OR_ASGN .

    $default  reduce using rule 77 (assignment_operator)


State 141

   66 assignment_expression: unary_expression assignment_operator . assignment_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 220


State 142

   33 cast_expression: unary_expression .

    $default  reduce using rule 33 (cast_expression)


State 143

   24 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 24 (unary_expression)


State 144

   36 multiplicative_expression: multiplicative_expression MULT_OP . cast_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression  go to state 73
    constant            go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 142
    unary_operator      go to state 77
    cast_expression     go to state 221


State 145

   37 multiplicative_expression: multiplicative_expression DIV_OP . cast_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression  go to state 73
    constant            go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 142
    unary_operator      go to state 77
    cast_expression     go to state 222


State 146

   38 multiplicative_expression: multiplicative_expression REM . cast_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression  go to state 73
    constant            go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 142
    unary_operator      go to state 77
    cast_expression     go to state 223


State 147

   40 additive_expression: additive_expression ADD_OP . multiplicative_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 142
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 224


State 148

   41 additive_expression: additive_expression MINUS_OP . multiplicative_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 142
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 225


State 149

   43 shift_expression: shift_expression L_SHIFT . additive_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 142
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 226


State 150

   44 shift_expression: shift_expression R_SHIFT . additive_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 142
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 227


State 151

   46 relational_expression: relational_expression LT . shift_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 142
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 228


State 152

   47 relational_expression: relational_expression GT . shift_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 142
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 229


State 153

   48 relational_expression: relational_expression LT_EQ . shift_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 142
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 230


State 154

   49 relational_expression: relational_expression GT_EQ . shift_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 142
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 231


State 155

   51 equality_expression: equality_expression EQ . relational_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 142
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 232


State 156

   52 equality_expression: equality_expression NEQ . relational_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 142
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 233


State 157

   54 AND_expression: AND_expression BIT_AND . equality_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 142
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 234


State 158

   56 exclusive_OR_expression: exclusive_OR_expression BIT_XOR . AND_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 142
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 235


State 159

   58 inclusive_OR_expression: inclusive_OR_expression BIT_OR . exclusive_OR_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 142
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 236


State 160

   60 logical_AND_expression: logical_AND_expression LOGIC_AND . inclusive_OR_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 142
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 237


State 161

   62 logical_OR_expression: logical_OR_expression LOGIC_OR . logical_AND_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 142
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 238


State 162

   64 conditional_expression: logical_OR_expression QUERY . expression COLON conditional_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 239


State 163

  181 jump_statement: BREAK . SEMI_COLON

    SEMI_COLON  shift, and go to state 240


State 164

  160 labeled_statement: CASE . constant_expression COLON statement

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 142
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 205
    constant_expression        go to state 241


State 165

  180 jump_statement: CONTINUE . SEMI_COLON

    SEMI_COLON  shift, and go to state 242


State 166

  161 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 243


State 167

  176 iteration_statement: DO . statement WHILE RO_LBRACE expression RO_RBRACE SEMI_COLON

    BREAK         shift, and go to state 163
    CASE          shift, and go to state 164
    CONTINUE      shift, and go to state 165
    DEFAULT       shift, and go to state 166
    DO            shift, and go to state 167
    FOR           shift, and go to state 168
    GOTO          shift, and go to state 169
    IF            shift, and go to state 170
    RETURN        shift, and go to state 171
    SIZEOF        shift, and go to state 57
    SWITCH        shift, and go to state 172
    WHILE         shift, and go to state 173
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 174
    RO_LBRACE     shift, and go to state 63
    FL_LBRACE     shift, and go to state 92
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    $default  reduce using rule 170 (expression_opt)

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 175
    statement                  go to state 244
    labeled_statement          go to state 178
    compound_statement         go to state 180
    expression_opt             go to state 183
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187


State 168

  177 iteration_statement: FOR . RO_LBRACE expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt RO_RBRACE statement
  178                    | FOR . RO_LBRACE declaration expression_opt SEMI_COLON expression_opt RO_RBRACE statement

    RO_LBRACE  shift, and go to state 245


State 169

  179 jump_statement: GOTO . ID SEMI_COLON

    ID  shift, and go to state 246


State 170

  172 selection_statement: IF . RO_LBRACE expression RO_RBRACE statement
  173                    | IF . RO_LBRACE expression RO_RBRACE statement ELSE statement

    RO_LBRACE  shift, and go to state 247


State 171

  182 jump_statement: RETURN . expression_opt SEMI_COLON

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    $default  reduce using rule 170 (expression_opt)

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 175
    expression_opt             go to state 248


State 172

  174 selection_statement: SWITCH . RO_LBRACE expression RO_RBRACE statement

    RO_LBRACE  shift, and go to state 249


State 173

  175 iteration_statement: WHILE . RO_LBRACE expression RO_RBRACE statement

    RO_LBRACE  shift, and go to state 250


State 174

    1 primary_expression: ID .
  159 labeled_statement: ID . COLON statement

    COLON  shift, and go to state 251

    $default  reduce using rule 1 (primary_expression)


State 175

   79 expression: expression . COMMA assignment_expression
  169 expression_opt: expression .

    COMMA  shift, and go to state 200

    $default  reduce using rule 169 (expression_opt)


State 176

  167 block_item: declaration .

    $default  reduce using rule 167 (block_item)


State 177

  168 block_item: statement .

    $default  reduce using rule 168 (block_item)


State 178

  153 statement: labeled_statement .

    $default  reduce using rule 153 (statement)


State 179

  164 compound_statement: FL_LBRACE block_item_list_opt . FL_RBRACE

    FL_RBRACE  shift, and go to state 252


State 180

  154 statement: compound_statement .

    $default  reduce using rule 154 (statement)


State 181

  162 block_item_list_opt: block_item_list .
  166 block_item_list: block_item_list . block_item

    BREAK         shift, and go to state 163
    CASE          shift, and go to state 164
    CHAR          shift, and go to state 1
    CONTINUE      shift, and go to state 165
    DEFAULT       shift, and go to state 166
    DO            shift, and go to state 167
    DOUBLE        shift, and go to state 2
    EXTERN        shift, and go to state 3
    FLOAT         shift, and go to state 4
    FOR           shift, and go to state 168
    GOTO          shift, and go to state 169
    IF            shift, and go to state 170
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    RETURN        shift, and go to state 171
    SHORT         shift, and go to state 7
    SIZEOF        shift, and go to state 57
    STATIC        shift, and go to state 8
    SWITCH        shift, and go to state 172
    VOID          shift, and go to state 9
    WHILE         shift, and go to state 173
    CONST         shift, and go to state 10
    RESTRICT      shift, and go to state 11
    VOLATILE      shift, and go to state 12
    INLINE        shift, and go to state 13
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 174
    RO_LBRACE     shift, and go to state 63
    FL_LBRACE     shift, and go to state 92
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    SEMI_COLON  reduce using rule 170 (expression_opt)
    $default    reduce using rule 162 (block_item_list_opt)

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 175
    declaration                go to state 176
    declaration_specifiers     go to state 47
    storage_class_specifier    go to state 16
    type_specifier             go to state 17
    type_qualifier             go to state 18
    function_specifier         go to state 19
    statement                  go to state 177
    labeled_statement          go to state 178
    compound_statement         go to state 180
    block_item                 go to state 253
    expression_opt             go to state 183
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187


State 182

  165 block_item_list: block_item .

    $default  reduce using rule 165 (block_item_list)


State 183

  171 expression_statement: expression_opt . SEMI_COLON

    SEMI_COLON  shift, and go to state 254


State 184

  155 statement: expression_statement .

    $default  reduce using rule 155 (statement)


State 185

  156 statement: selection_statement .

    $default  reduce using rule 156 (statement)


State 186

  157 statement: iteration_statement .

    $default  reduce using rule 157 (statement)


State 187

  158 statement: jump_statement .

    $default  reduce using rule 158 (statement)


State 188

  123 direct_declarator: direct_declarator SQ_LBRACE STATIC type_qualifier_list_opt . assignment_expression SQ_RBRACE

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 255


State 189

   28 unary_operator: MULT_OP .
  125 direct_declarator: direct_declarator SQ_LBRACE type_qualifier_list_opt MULT_OP . SQ_RBRACE

    SQ_RBRACE  shift, and go to state 256

    $default  reduce using rule 28 (unary_operator)


State 190

  114 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 114 (assignment_expression_opt)


State 191

  122 direct_declarator: direct_declarator SQ_LBRACE type_qualifier_list_opt assignment_expression_opt . SQ_RBRACE

    SQ_RBRACE  shift, and go to state 257


State 192

  124 direct_declarator: direct_declarator SQ_LBRACE type_qualifier_list STATIC . assignment_expression SQ_RBRACE

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 258


State 193

  136 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 136 (parameter_declaration)


State 194

  127 direct_declarator: direct_declarator RO_LBRACE identifier_list_opt RO_RBRACE .

    $default  reduce using rule 127 (direct_declarator)


State 195

  126 direct_declarator: direct_declarator RO_LBRACE parameter_type_list RO_RBRACE .

    $default  reduce using rule 126 (direct_declarator)


State 196

  133 parameter_type_list: parameter_list COMMA . VAR_ARG_LIST
  135 parameter_list: parameter_list COMMA . parameter_declaration

    CHAR          shift, and go to state 1
    DOUBLE        shift, and go to state 2
    EXTERN        shift, and go to state 3
    FLOAT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SHORT         shift, and go to state 7
    STATIC        shift, and go to state 8
    VOID          shift, and go to state 9
    CONST         shift, and go to state 10
    RESTRICT      shift, and go to state 11
    VOLATILE      shift, and go to state 12
    INLINE        shift, and go to state 13
    VAR_ARG_LIST  shift, and go to state 259

    declaration_specifiers   go to state 100
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    parameter_declaration    go to state 260


State 197

  139 identifier_list: identifier_list COMMA . ID

    ID  shift, and go to state 261


State 198

   17 postfix_expression: RO_LBRACE type_name . RO_RBRACE FL_LBRACE initializer_list FL_RBRACE
   18                   | RO_LBRACE type_name . RO_RBRACE FL_LBRACE initializer_list COMMA FL_RBRACE
   26 unary_expression: SIZEOF RO_LBRACE type_name . RO_RBRACE

    RO_RBRACE  shift, and go to state 262


State 199

    4 primary_expression: RO_LBRACE expression RO_RBRACE .

    $default  reduce using rule 4 (primary_expression)


State 200

   79 expression: expression COMMA . assignment_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 263


State 201

  105 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 105 (specifier_qualifier_list)


State 202

  103 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 103 (specifier_qualifier_list_opt)


State 203

  106 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 106 (specifier_qualifier_list)


State 204

   17 postfix_expression: RO_LBRACE type_name RO_RBRACE . FL_LBRACE initializer_list FL_RBRACE
   18                   | RO_LBRACE type_name RO_RBRACE . FL_LBRACE initializer_list COMMA FL_RBRACE
   34 cast_expression: RO_LBRACE type_name RO_RBRACE . cast_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    FL_LBRACE     shift, and go to state 264
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression  go to state 73
    constant            go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 142
    unary_operator      go to state 77
    cast_expression     go to state 265


State 205

   80 constant_expression: conditional_expression .

    $default  reduce using rule 80 (constant_expression)


State 206

  151 designator: SQ_LBRACE constant_expression . SQ_RBRACE

    SQ_RBRACE  shift, and go to state 266


State 207

  152 designator: DOT ID .

    $default  reduce using rule 152 (designator)


State 208

  146 initializer_list: designation_opt initializer .

    $default  reduce using rule 146 (initializer_list)


State 209

  142 initializer: FL_LBRACE initializer_list FL_RBRACE .

    $default  reduce using rule 142 (initializer)


State 210

  143 initializer: FL_LBRACE initializer_list COMMA . FL_RBRACE
  147 initializer_list: initializer_list COMMA . designation_opt initializer

    SQ_LBRACE  shift, and go to state 114
    FL_RBRACE  shift, and go to state 267
    DOT        shift, and go to state 115

    $default  reduce using rule 145 (designation_opt)

    designation_opt  go to state 268
    designation      go to state 118
    designator_list  go to state 119
    designator       go to state 120


State 211

  148 designation: designator_list ASSIGN .

    $default  reduce using rule 148 (designation)


State 212

  150 designator_list: designator_list designator .

    $default  reduce using rule 150 (designator_list)


State 213

   17 postfix_expression: RO_LBRACE type_name . RO_RBRACE FL_LBRACE initializer_list FL_RBRACE
   18                   | RO_LBRACE type_name . RO_RBRACE FL_LBRACE initializer_list COMMA FL_RBRACE

    RO_RBRACE  shift, and go to state 269


State 214

   11 postfix_expression: postfix_expression SQ_LBRACE expression . SQ_RBRACE
   79 expression: expression . COMMA assignment_expression

    SQ_RBRACE  shift, and go to state 270
    COMMA      shift, and go to state 200


State 215

   12 postfix_expression: postfix_expression RO_LBRACE argument_expression_list_opt . RO_RBRACE

    RO_RBRACE  shift, and go to state 271


State 216

    8 argument_expression_list_opt: argument_expression_list .
   20 argument_expression_list: argument_expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 272

    $default  reduce using rule 8 (argument_expression_list_opt)


State 217

   19 argument_expression_list: assignment_expression .

    $default  reduce using rule 19 (argument_expression_list)


State 218

   13 postfix_expression: postfix_expression DOT ID .

    $default  reduce using rule 13 (postfix_expression)


State 219

   14 postfix_expression: postfix_expression MEM_OP ID .

    $default  reduce using rule 14 (postfix_expression)


State 220

   66 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 66 (assignment_expression)


State 221

   36 multiplicative_expression: multiplicative_expression MULT_OP cast_expression .

    $default  reduce using rule 36 (multiplicative_expression)


State 222

   37 multiplicative_expression: multiplicative_expression DIV_OP cast_expression .

    $default  reduce using rule 37 (multiplicative_expression)


State 223

   38 multiplicative_expression: multiplicative_expression REM cast_expression .

    $default  reduce using rule 38 (multiplicative_expression)


State 224

   36 multiplicative_expression: multiplicative_expression . MULT_OP cast_expression
   37                          | multiplicative_expression . DIV_OP cast_expression
   38                          | multiplicative_expression . REM cast_expression
   40 additive_expression: additive_expression ADD_OP multiplicative_expression .

    MULT_OP  shift, and go to state 144
    DIV_OP   shift, and go to state 145
    REM      shift, and go to state 146

    $default  reduce using rule 40 (additive_expression)


State 225

   36 multiplicative_expression: multiplicative_expression . MULT_OP cast_expression
   37                          | multiplicative_expression . DIV_OP cast_expression
   38                          | multiplicative_expression . REM cast_expression
   41 additive_expression: additive_expression MINUS_OP multiplicative_expression .

    MULT_OP  shift, and go to state 144
    DIV_OP   shift, and go to state 145
    REM      shift, and go to state 146

    $default  reduce using rule 41 (additive_expression)


State 226

   40 additive_expression: additive_expression . ADD_OP multiplicative_expression
   41                    | additive_expression . MINUS_OP multiplicative_expression
   43 shift_expression: shift_expression L_SHIFT additive_expression .

    ADD_OP    shift, and go to state 147
    MINUS_OP  shift, and go to state 148

    $default  reduce using rule 43 (shift_expression)


State 227

   40 additive_expression: additive_expression . ADD_OP multiplicative_expression
   41                    | additive_expression . MINUS_OP multiplicative_expression
   44 shift_expression: shift_expression R_SHIFT additive_expression .

    ADD_OP    shift, and go to state 147
    MINUS_OP  shift, and go to state 148

    $default  reduce using rule 44 (shift_expression)


State 228

   43 shift_expression: shift_expression . L_SHIFT additive_expression
   44                 | shift_expression . R_SHIFT additive_expression
   46 relational_expression: relational_expression LT shift_expression .

    L_SHIFT  shift, and go to state 149
    R_SHIFT  shift, and go to state 150

    $default  reduce using rule 46 (relational_expression)


State 229

   43 shift_expression: shift_expression . L_SHIFT additive_expression
   44                 | shift_expression . R_SHIFT additive_expression
   47 relational_expression: relational_expression GT shift_expression .

    L_SHIFT  shift, and go to state 149
    R_SHIFT  shift, and go to state 150

    $default  reduce using rule 47 (relational_expression)


State 230

   43 shift_expression: shift_expression . L_SHIFT additive_expression
   44                 | shift_expression . R_SHIFT additive_expression
   48 relational_expression: relational_expression LT_EQ shift_expression .

    L_SHIFT  shift, and go to state 149
    R_SHIFT  shift, and go to state 150

    $default  reduce using rule 48 (relational_expression)


State 231

   43 shift_expression: shift_expression . L_SHIFT additive_expression
   44                 | shift_expression . R_SHIFT additive_expression
   49 relational_expression: relational_expression GT_EQ shift_expression .

    L_SHIFT  shift, and go to state 149
    R_SHIFT  shift, and go to state 150

    $default  reduce using rule 49 (relational_expression)


State 232

   46 relational_expression: relational_expression . LT shift_expression
   47                      | relational_expression . GT shift_expression
   48                      | relational_expression . LT_EQ shift_expression
   49                      | relational_expression . GT_EQ shift_expression
   51 equality_expression: equality_expression EQ relational_expression .

    LT     shift, and go to state 151
    GT     shift, and go to state 152
    LT_EQ  shift, and go to state 153
    GT_EQ  shift, and go to state 154

    $default  reduce using rule 51 (equality_expression)


State 233

   46 relational_expression: relational_expression . LT shift_expression
   47                      | relational_expression . GT shift_expression
   48                      | relational_expression . LT_EQ shift_expression
   49                      | relational_expression . GT_EQ shift_expression
   52 equality_expression: equality_expression NEQ relational_expression .

    LT     shift, and go to state 151
    GT     shift, and go to state 152
    LT_EQ  shift, and go to state 153
    GT_EQ  shift, and go to state 154

    $default  reduce using rule 52 (equality_expression)


State 234

   51 equality_expression: equality_expression . EQ relational_expression
   52                    | equality_expression . NEQ relational_expression
   54 AND_expression: AND_expression BIT_AND equality_expression .

    EQ   shift, and go to state 155
    NEQ  shift, and go to state 156

    $default  reduce using rule 54 (AND_expression)


State 235

   54 AND_expression: AND_expression . BIT_AND equality_expression
   56 exclusive_OR_expression: exclusive_OR_expression BIT_XOR AND_expression .

    BIT_AND  shift, and go to state 157

    $default  reduce using rule 56 (exclusive_OR_expression)


State 236

   56 exclusive_OR_expression: exclusive_OR_expression . BIT_XOR AND_expression
   58 inclusive_OR_expression: inclusive_OR_expression BIT_OR exclusive_OR_expression .

    BIT_XOR  shift, and go to state 158

    $default  reduce using rule 58 (inclusive_OR_expression)


State 237

   58 inclusive_OR_expression: inclusive_OR_expression . BIT_OR exclusive_OR_expression
   60 logical_AND_expression: logical_AND_expression LOGIC_AND inclusive_OR_expression .

    BIT_OR  shift, and go to state 159

    $default  reduce using rule 60 (logical_AND_expression)


State 238

   60 logical_AND_expression: logical_AND_expression . LOGIC_AND inclusive_OR_expression
   62 logical_OR_expression: logical_OR_expression LOGIC_OR logical_AND_expression .

    LOGIC_AND  shift, and go to state 160

    $default  reduce using rule 62 (logical_OR_expression)


State 239

   64 conditional_expression: logical_OR_expression QUERY expression . COLON conditional_expression
   79 expression: expression . COMMA assignment_expression

    COLON  shift, and go to state 273
    COMMA  shift, and go to state 200


State 240

  181 jump_statement: BREAK SEMI_COLON .

    $default  reduce using rule 181 (jump_statement)


State 241

  160 labeled_statement: CASE constant_expression . COLON statement

    COLON  shift, and go to state 274


State 242

  180 jump_statement: CONTINUE SEMI_COLON .

    $default  reduce using rule 180 (jump_statement)


State 243

  161 labeled_statement: DEFAULT COLON . statement

    BREAK         shift, and go to state 163
    CASE          shift, and go to state 164
    CONTINUE      shift, and go to state 165
    DEFAULT       shift, and go to state 166
    DO            shift, and go to state 167
    FOR           shift, and go to state 168
    GOTO          shift, and go to state 169
    IF            shift, and go to state 170
    RETURN        shift, and go to state 171
    SIZEOF        shift, and go to state 57
    SWITCH        shift, and go to state 172
    WHILE         shift, and go to state 173
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 174
    RO_LBRACE     shift, and go to state 63
    FL_LBRACE     shift, and go to state 92
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    $default  reduce using rule 170 (expression_opt)

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 175
    statement                  go to state 275
    labeled_statement          go to state 178
    compound_statement         go to state 180
    expression_opt             go to state 183
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187


State 244

  176 iteration_statement: DO statement . WHILE RO_LBRACE expression RO_RBRACE SEMI_COLON

    WHILE  shift, and go to state 276


State 245

  177 iteration_statement: FOR RO_LBRACE . expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt RO_RBRACE statement
  178                    | FOR RO_LBRACE . declaration expression_opt SEMI_COLON expression_opt RO_RBRACE statement

    CHAR          shift, and go to state 1
    DOUBLE        shift, and go to state 2
    EXTERN        shift, and go to state 3
    FLOAT         shift, and go to state 4
    INT           shift, and go to state 5
    LONG          shift, and go to state 6
    SHORT         shift, and go to state 7
    SIZEOF        shift, and go to state 57
    STATIC        shift, and go to state 8
    VOID          shift, and go to state 9
    CONST         shift, and go to state 10
    RESTRICT      shift, and go to state 11
    VOLATILE      shift, and go to state 12
    INLINE        shift, and go to state 13
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    $default  reduce using rule 170 (expression_opt)

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 175
    declaration                go to state 277
    declaration_specifiers     go to state 47
    storage_class_specifier    go to state 16
    type_specifier             go to state 17
    type_qualifier             go to state 18
    function_specifier         go to state 19
    expression_opt             go to state 278


State 246

  179 jump_statement: GOTO ID . SEMI_COLON

    SEMI_COLON  shift, and go to state 279


State 247

  172 selection_statement: IF RO_LBRACE . expression RO_RBRACE statement
  173                    | IF RO_LBRACE . expression RO_RBRACE statement ELSE statement

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 280


State 248

  182 jump_statement: RETURN expression_opt . SEMI_COLON

    SEMI_COLON  shift, and go to state 281


State 249

  174 selection_statement: SWITCH RO_LBRACE . expression RO_RBRACE statement

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 282


State 250

  175 iteration_statement: WHILE RO_LBRACE . expression RO_RBRACE statement

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 283


State 251

  159 labeled_statement: ID COLON . statement

    BREAK         shift, and go to state 163
    CASE          shift, and go to state 164
    CONTINUE      shift, and go to state 165
    DEFAULT       shift, and go to state 166
    DO            shift, and go to state 167
    FOR           shift, and go to state 168
    GOTO          shift, and go to state 169
    IF            shift, and go to state 170
    RETURN        shift, and go to state 171
    SIZEOF        shift, and go to state 57
    SWITCH        shift, and go to state 172
    WHILE         shift, and go to state 173
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 174
    RO_LBRACE     shift, and go to state 63
    FL_LBRACE     shift, and go to state 92
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    $default  reduce using rule 170 (expression_opt)

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 175
    statement                  go to state 284
    labeled_statement          go to state 178
    compound_statement         go to state 180
    expression_opt             go to state 183
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187


State 252

  164 compound_statement: FL_LBRACE block_item_list_opt FL_RBRACE .

    $default  reduce using rule 164 (compound_statement)


State 253

  166 block_item_list: block_item_list block_item .

    $default  reduce using rule 166 (block_item_list)


State 254

  171 expression_statement: expression_opt SEMI_COLON .

    $default  reduce using rule 171 (expression_statement)


State 255

  123 direct_declarator: direct_declarator SQ_LBRACE STATIC type_qualifier_list_opt assignment_expression . SQ_RBRACE

    SQ_RBRACE  shift, and go to state 285


State 256

  125 direct_declarator: direct_declarator SQ_LBRACE type_qualifier_list_opt MULT_OP SQ_RBRACE .

    $default  reduce using rule 125 (direct_declarator)


State 257

  122 direct_declarator: direct_declarator SQ_LBRACE type_qualifier_list_opt assignment_expression_opt SQ_RBRACE .

    $default  reduce using rule 122 (direct_declarator)


State 258

  124 direct_declarator: direct_declarator SQ_LBRACE type_qualifier_list STATIC assignment_expression . SQ_RBRACE

    SQ_RBRACE  shift, and go to state 286


State 259

  133 parameter_type_list: parameter_list COMMA VAR_ARG_LIST .

    $default  reduce using rule 133 (parameter_type_list)


State 260

  135 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 135 (parameter_list)


State 261

  139 identifier_list: identifier_list COMMA ID .

    $default  reduce using rule 139 (identifier_list)


State 262

   17 postfix_expression: RO_LBRACE type_name RO_RBRACE . FL_LBRACE initializer_list FL_RBRACE
   18                   | RO_LBRACE type_name RO_RBRACE . FL_LBRACE initializer_list COMMA FL_RBRACE
   26 unary_expression: SIZEOF RO_LBRACE type_name RO_RBRACE .

    FL_LBRACE  shift, and go to state 264

    $default  reduce using rule 26 (unary_expression)


State 263

   79 expression: expression COMMA assignment_expression .

    $default  reduce using rule 79 (expression)


State 264

   17 postfix_expression: RO_LBRACE type_name RO_RBRACE FL_LBRACE . initializer_list FL_RBRACE
   18                   | RO_LBRACE type_name RO_RBRACE FL_LBRACE . initializer_list COMMA FL_RBRACE

    SQ_LBRACE  shift, and go to state 114
    DOT        shift, and go to state 115

    $default  reduce using rule 145 (designation_opt)

    designation_opt   go to state 116
    initializer_list  go to state 287
    designation       go to state 118
    designator_list   go to state 119
    designator        go to state 120


State 265

   34 cast_expression: RO_LBRACE type_name RO_RBRACE cast_expression .

    $default  reduce using rule 34 (cast_expression)


State 266

  151 designator: SQ_LBRACE constant_expression SQ_RBRACE .

    $default  reduce using rule 151 (designator)


State 267

  143 initializer: FL_LBRACE initializer_list COMMA FL_RBRACE .

    $default  reduce using rule 143 (initializer)


State 268

  147 initializer_list: initializer_list COMMA designation_opt . initializer

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    FL_LBRACE     shift, and go to state 64
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 90
    initializer                go to state 288


State 269

   17 postfix_expression: RO_LBRACE type_name RO_RBRACE . FL_LBRACE initializer_list FL_RBRACE
   18                   | RO_LBRACE type_name RO_RBRACE . FL_LBRACE initializer_list COMMA FL_RBRACE

    FL_LBRACE  shift, and go to state 264


State 270

   11 postfix_expression: postfix_expression SQ_LBRACE expression SQ_RBRACE .

    $default  reduce using rule 11 (postfix_expression)


State 271

   12 postfix_expression: postfix_expression RO_LBRACE argument_expression_list_opt RO_RBRACE .

    $default  reduce using rule 12 (postfix_expression)


State 272

   20 argument_expression_list: argument_expression_list COMMA . assignment_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 289


State 273

   64 conditional_expression: logical_OR_expression QUERY expression COLON . conditional_expression

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 142
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 290


State 274

  160 labeled_statement: CASE constant_expression COLON . statement

    BREAK         shift, and go to state 163
    CASE          shift, and go to state 164
    CONTINUE      shift, and go to state 165
    DEFAULT       shift, and go to state 166
    DO            shift, and go to state 167
    FOR           shift, and go to state 168
    GOTO          shift, and go to state 169
    IF            shift, and go to state 170
    RETURN        shift, and go to state 171
    SIZEOF        shift, and go to state 57
    SWITCH        shift, and go to state 172
    WHILE         shift, and go to state 173
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 174
    RO_LBRACE     shift, and go to state 63
    FL_LBRACE     shift, and go to state 92
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    $default  reduce using rule 170 (expression_opt)

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 175
    statement                  go to state 291
    labeled_statement          go to state 178
    compound_statement         go to state 180
    expression_opt             go to state 183
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187


State 275

  161 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 161 (labeled_statement)


State 276

  176 iteration_statement: DO statement WHILE . RO_LBRACE expression RO_RBRACE SEMI_COLON

    RO_LBRACE  shift, and go to state 292


State 277

  178 iteration_statement: FOR RO_LBRACE declaration . expression_opt SEMI_COLON expression_opt RO_RBRACE statement

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    $default  reduce using rule 170 (expression_opt)

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 175
    expression_opt             go to state 293


State 278

  177 iteration_statement: FOR RO_LBRACE expression_opt . SEMI_COLON expression_opt SEMI_COLON expression_opt RO_RBRACE statement

    SEMI_COLON  shift, and go to state 294


State 279

  179 jump_statement: GOTO ID SEMI_COLON .

    $default  reduce using rule 179 (jump_statement)


State 280

   79 expression: expression . COMMA assignment_expression
  172 selection_statement: IF RO_LBRACE expression . RO_RBRACE statement
  173                    | IF RO_LBRACE expression . RO_RBRACE statement ELSE statement

    RO_RBRACE  shift, and go to state 295
    COMMA      shift, and go to state 200


State 281

  182 jump_statement: RETURN expression_opt SEMI_COLON .

    $default  reduce using rule 182 (jump_statement)


State 282

   79 expression: expression . COMMA assignment_expression
  174 selection_statement: SWITCH RO_LBRACE expression . RO_RBRACE statement

    RO_RBRACE  shift, and go to state 296
    COMMA      shift, and go to state 200


State 283

   79 expression: expression . COMMA assignment_expression
  175 iteration_statement: WHILE RO_LBRACE expression . RO_RBRACE statement

    RO_RBRACE  shift, and go to state 297
    COMMA      shift, and go to state 200


State 284

  159 labeled_statement: ID COLON statement .

    $default  reduce using rule 159 (labeled_statement)


State 285

  123 direct_declarator: direct_declarator SQ_LBRACE STATIC type_qualifier_list_opt assignment_expression SQ_RBRACE .

    $default  reduce using rule 123 (direct_declarator)


State 286

  124 direct_declarator: direct_declarator SQ_LBRACE type_qualifier_list STATIC assignment_expression SQ_RBRACE .

    $default  reduce using rule 124 (direct_declarator)


State 287

   17 postfix_expression: RO_LBRACE type_name RO_RBRACE FL_LBRACE initializer_list . FL_RBRACE
   18                   | RO_LBRACE type_name RO_RBRACE FL_LBRACE initializer_list . COMMA FL_RBRACE
  147 initializer_list: initializer_list . COMMA designation_opt initializer

    FL_RBRACE  shift, and go to state 298
    COMMA      shift, and go to state 299


State 288

  147 initializer_list: initializer_list COMMA designation_opt initializer .

    $default  reduce using rule 147 (initializer_list)


State 289

   20 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 20 (argument_expression_list)


State 290

   64 conditional_expression: logical_OR_expression QUERY expression COLON conditional_expression .

    $default  reduce using rule 64 (conditional_expression)


State 291

  160 labeled_statement: CASE constant_expression COLON statement .

    $default  reduce using rule 160 (labeled_statement)


State 292

  176 iteration_statement: DO statement WHILE RO_LBRACE . expression RO_RBRACE SEMI_COLON

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 300


State 293

  178 iteration_statement: FOR RO_LBRACE declaration expression_opt . SEMI_COLON expression_opt RO_RBRACE statement

    SEMI_COLON  shift, and go to state 301


State 294

  177 iteration_statement: FOR RO_LBRACE expression_opt SEMI_COLON . expression_opt SEMI_COLON expression_opt RO_RBRACE statement

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    $default  reduce using rule 170 (expression_opt)

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 175
    expression_opt             go to state 302


State 295

  172 selection_statement: IF RO_LBRACE expression RO_RBRACE . statement
  173                    | IF RO_LBRACE expression RO_RBRACE . statement ELSE statement

    BREAK         shift, and go to state 163
    CASE          shift, and go to state 164
    CONTINUE      shift, and go to state 165
    DEFAULT       shift, and go to state 166
    DO            shift, and go to state 167
    FOR           shift, and go to state 168
    GOTO          shift, and go to state 169
    IF            shift, and go to state 170
    RETURN        shift, and go to state 171
    SIZEOF        shift, and go to state 57
    SWITCH        shift, and go to state 172
    WHILE         shift, and go to state 173
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 174
    RO_LBRACE     shift, and go to state 63
    FL_LBRACE     shift, and go to state 92
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    $default  reduce using rule 170 (expression_opt)

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 175
    statement                  go to state 303
    labeled_statement          go to state 178
    compound_statement         go to state 180
    expression_opt             go to state 183
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187


State 296

  174 selection_statement: SWITCH RO_LBRACE expression RO_RBRACE . statement

    BREAK         shift, and go to state 163
    CASE          shift, and go to state 164
    CONTINUE      shift, and go to state 165
    DEFAULT       shift, and go to state 166
    DO            shift, and go to state 167
    FOR           shift, and go to state 168
    GOTO          shift, and go to state 169
    IF            shift, and go to state 170
    RETURN        shift, and go to state 171
    SIZEOF        shift, and go to state 57
    SWITCH        shift, and go to state 172
    WHILE         shift, and go to state 173
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 174
    RO_LBRACE     shift, and go to state 63
    FL_LBRACE     shift, and go to state 92
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    $default  reduce using rule 170 (expression_opt)

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 175
    statement                  go to state 304
    labeled_statement          go to state 178
    compound_statement         go to state 180
    expression_opt             go to state 183
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187


State 297

  175 iteration_statement: WHILE RO_LBRACE expression RO_RBRACE . statement

    BREAK         shift, and go to state 163
    CASE          shift, and go to state 164
    CONTINUE      shift, and go to state 165
    DEFAULT       shift, and go to state 166
    DO            shift, and go to state 167
    FOR           shift, and go to state 168
    GOTO          shift, and go to state 169
    IF            shift, and go to state 170
    RETURN        shift, and go to state 171
    SIZEOF        shift, and go to state 57
    SWITCH        shift, and go to state 172
    WHILE         shift, and go to state 173
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 174
    RO_LBRACE     shift, and go to state 63
    FL_LBRACE     shift, and go to state 92
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    $default  reduce using rule 170 (expression_opt)

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 175
    statement                  go to state 305
    labeled_statement          go to state 178
    compound_statement         go to state 180
    expression_opt             go to state 183
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187


State 298

   17 postfix_expression: RO_LBRACE type_name RO_RBRACE FL_LBRACE initializer_list FL_RBRACE .

    $default  reduce using rule 17 (postfix_expression)


State 299

   18 postfix_expression: RO_LBRACE type_name RO_RBRACE FL_LBRACE initializer_list COMMA . FL_RBRACE
  147 initializer_list: initializer_list COMMA . designation_opt initializer

    SQ_LBRACE  shift, and go to state 114
    FL_RBRACE  shift, and go to state 306
    DOT        shift, and go to state 115

    $default  reduce using rule 145 (designation_opt)

    designation_opt  go to state 268
    designation      go to state 118
    designator_list  go to state 119
    designator       go to state 120


State 300

   79 expression: expression . COMMA assignment_expression
  176 iteration_statement: DO statement WHILE RO_LBRACE expression . RO_RBRACE SEMI_COLON

    RO_RBRACE  shift, and go to state 307
    COMMA      shift, and go to state 200


State 301

  178 iteration_statement: FOR RO_LBRACE declaration expression_opt SEMI_COLON . expression_opt RO_RBRACE statement

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    $default  reduce using rule 170 (expression_opt)

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 175
    expression_opt             go to state 308


State 302

  177 iteration_statement: FOR RO_LBRACE expression_opt SEMI_COLON expression_opt . SEMI_COLON expression_opt RO_RBRACE statement

    SEMI_COLON  shift, and go to state 309


State 303

  172 selection_statement: IF RO_LBRACE expression RO_RBRACE statement .
  173                    | IF RO_LBRACE expression RO_RBRACE statement . ELSE statement

    ELSE  shift, and go to state 310

    $default  reduce using rule 172 (selection_statement)


State 304

  174 selection_statement: SWITCH RO_LBRACE expression RO_RBRACE statement .

    $default  reduce using rule 174 (selection_statement)


State 305

  175 iteration_statement: WHILE RO_LBRACE expression RO_RBRACE statement .

    $default  reduce using rule 175 (iteration_statement)


State 306

   18 postfix_expression: RO_LBRACE type_name RO_RBRACE FL_LBRACE initializer_list COMMA FL_RBRACE .

    $default  reduce using rule 18 (postfix_expression)


State 307

  176 iteration_statement: DO statement WHILE RO_LBRACE expression RO_RBRACE . SEMI_COLON

    SEMI_COLON  shift, and go to state 311


State 308

  178 iteration_statement: FOR RO_LBRACE declaration expression_opt SEMI_COLON expression_opt . RO_RBRACE statement

    RO_RBRACE  shift, and go to state 312


State 309

  177 iteration_statement: FOR RO_LBRACE expression_opt SEMI_COLON expression_opt SEMI_COLON . expression_opt RO_RBRACE statement

    SIZEOF        shift, and go to state 57
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 62
    RO_LBRACE     shift, and go to state 63
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    $default  reduce using rule 170 (expression_opt)

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 175
    expression_opt             go to state 313


State 310

  173 selection_statement: IF RO_LBRACE expression RO_RBRACE statement ELSE . statement

    BREAK         shift, and go to state 163
    CASE          shift, and go to state 164
    CONTINUE      shift, and go to state 165
    DEFAULT       shift, and go to state 166
    DO            shift, and go to state 167
    FOR           shift, and go to state 168
    GOTO          shift, and go to state 169
    IF            shift, and go to state 170
    RETURN        shift, and go to state 171
    SIZEOF        shift, and go to state 57
    SWITCH        shift, and go to state 172
    WHILE         shift, and go to state 173
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 174
    RO_LBRACE     shift, and go to state 63
    FL_LBRACE     shift, and go to state 92
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    $default  reduce using rule 170 (expression_opt)

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 175
    statement                  go to state 314
    labeled_statement          go to state 178
    compound_statement         go to state 180
    expression_opt             go to state 183
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187


State 311

  176 iteration_statement: DO statement WHILE RO_LBRACE expression RO_RBRACE SEMI_COLON .

    $default  reduce using rule 176 (iteration_statement)


State 312

  178 iteration_statement: FOR RO_LBRACE declaration expression_opt SEMI_COLON expression_opt RO_RBRACE . statement

    BREAK         shift, and go to state 163
    CASE          shift, and go to state 164
    CONTINUE      shift, and go to state 165
    DEFAULT       shift, and go to state 166
    DO            shift, and go to state 167
    FOR           shift, and go to state 168
    GOTO          shift, and go to state 169
    IF            shift, and go to state 170
    RETURN        shift, and go to state 171
    SIZEOF        shift, and go to state 57
    SWITCH        shift, and go to state 172
    WHILE         shift, and go to state 173
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 174
    RO_LBRACE     shift, and go to state 63
    FL_LBRACE     shift, and go to state 92
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    $default  reduce using rule 170 (expression_opt)

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 175
    statement                  go to state 315
    labeled_statement          go to state 178
    compound_statement         go to state 180
    expression_opt             go to state 183
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187


State 313

  177 iteration_statement: FOR RO_LBRACE expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt . RO_RBRACE statement

    RO_RBRACE  shift, and go to state 316


State 314

  173 selection_statement: IF RO_LBRACE expression RO_RBRACE statement ELSE statement .

    $default  reduce using rule 173 (selection_statement)


State 315

  178 iteration_statement: FOR RO_LBRACE declaration expression_opt SEMI_COLON expression_opt RO_RBRACE statement .

    $default  reduce using rule 178 (iteration_statement)


State 316

  177 iteration_statement: FOR RO_LBRACE expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt RO_RBRACE . statement

    BREAK         shift, and go to state 163
    CASE          shift, and go to state 164
    CONTINUE      shift, and go to state 165
    DEFAULT       shift, and go to state 166
    DO            shift, and go to state 167
    FOR           shift, and go to state 168
    GOTO          shift, and go to state 169
    IF            shift, and go to state 170
    RETURN        shift, and go to state 171
    SIZEOF        shift, and go to state 57
    SWITCH        shift, and go to state 172
    WHILE         shift, and go to state 173
    INT_CONST     shift, and go to state 58
    FLOAT_CONST   shift, and go to state 59
    CHAR_CONST    shift, and go to state 60
    STR_LITERAL   shift, and go to state 61
    ID            shift, and go to state 174
    RO_LBRACE     shift, and go to state 63
    FL_LBRACE     shift, and go to state 92
    INCREMENT_OP  shift, and go to state 65
    DECREMENT_OP  shift, and go to state 66
    BIT_AND       shift, and go to state 67
    MULT_OP       shift, and go to state 68
    ADD_OP        shift, and go to state 69
    MINUS_OP      shift, and go to state 70
    BIT_COMPL     shift, and go to state 71
    NOT_OP        shift, and go to state 72

    $default  reduce using rule 170 (expression_opt)

    primary_expression         go to state 73
    constant                   go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    AND_expression             go to state 84
    exclusive_OR_expression    go to state 85
    inclusive_OR_expression    go to state 86
    logical_AND_expression     go to state 87
    logical_OR_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 108
    expression                 go to state 175
    statement                  go to state 317
    labeled_statement          go to state 178
    compound_statement         go to state 180
    expression_opt             go to state 183
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187


State 317

  177 iteration_statement: FOR RO_LBRACE expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt RO_RBRACE statement .

    $default  reduce using rule 177 (iteration_statement)
